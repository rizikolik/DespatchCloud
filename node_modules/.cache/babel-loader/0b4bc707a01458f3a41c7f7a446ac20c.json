{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    this.handleTimer = this.handleTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        seconds,\n        minutes\n      } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({\n            minutes\n          }) => ({\n            minutes: minutes - 1,\n            seconds: 59\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  handleTimer() {\n    function counter() {\n      const countDownDate = new Date(\"May 5, 2020 15:00:00\").getTime();\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000);\n      const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      console.log(count);\n    }\n\n    setInterval(counter, 1000);\n  }\n\n  render() {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"gifts in time for christmas\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"guaranreed delivery ends in\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Time Remaining: \", hours, \": \", minutes, \":\", seconds));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","constructor","props","state","hours","minutes","seconds","handleTimer","bind","componentDidMount","myInterval","setInterval","setState","clearInterval","counter","countDownDate","Date","getTime","now","distance","days","Math","floor","count","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n    this.handleTimer = this.handleTimer.bind(this);\n  }\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const { seconds, minutes } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({ seconds }) => ({\n          seconds: seconds - 1,\n        }));\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({ minutes }) => ({\n            minutes: minutes - 1,\n            seconds: 59,\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  handleTimer() {\n    function counter() {\n      const countDownDate = new Date(\"May 5, 2020 15:00:00\").getTime();\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      console.log(count);\n    }\n    setInterval(counter, 1000);\n  }\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n    return (\n      <React.Fragment>\n        <h1>gifts in time for christmas</h1>\n        <p>guaranreed delivery ends in</p>\n        <h1>\n          Time Remaining: {hours}: {minutes}:{seconds}\n        </h1>\n      </React.Fragment>\n    );\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}