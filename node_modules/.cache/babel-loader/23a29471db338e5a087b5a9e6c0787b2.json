{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  render() {\n    const time_refresh = setInterval(function () {\n      const now = new Date().getTime();\n      const distance = countDownDate - now; // Time calculations for days, hours, minutes and seconds\n\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000); // Output the result in an element with id=\"demo\"\n\n      document.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \"; // If the count down is over, write some text\n\n      if (distance < 0) {\n        clearInterval(x);\n        document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n      }\n    }, 1000);\n    const deadline = new Date(2017, 2, 11, 11, 30).toString();\n    const time_now = new Date().getTime();\n    console.log(deadline);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"Hello\");\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","render","time_refresh","setInterval","now","Date","getTime","distance","countDownDate","days","Math","floor","hours","minutes","seconds","document","getElementById","innerHTML","clearInterval","x","deadline","toString","time_now","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAGC,WAAW,CAAC,YAAY;AAC3C,YAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAMC,QAAQ,GAAGC,aAAa,GAAGJ,GAAjC,CAF2C,CAI3C;;AACA,YAAMK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAb;AACA,YAAMK,KAAK,GAAGF,IAAI,CAACC,KAAL,CACXJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CADY,CAAd;AAGA,YAAMM,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAhB;AACA,YAAMO,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYJ,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB,CAV2C,CAY3C;;AACAQ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GACER,IAAI,GAAG,IAAP,GAAcG,KAAd,GAAsB,IAAtB,GAA6BC,OAA7B,GAAuC,IAAvC,GAA8CC,OAA9C,GAAwD,IAD1D,CAb2C,CAgB3C;;AACA,UAAIP,QAAQ,GAAG,CAAf,EAAkB;AAChBW,QAAAA,aAAa,CAACC,CAAD,CAAb;AACAJ,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,SAA5C;AACD;AACF,KArB+B,EAqB7B,IArB6B,CAAhC;AAsBA,UAAMG,QAAQ,GAAG,IAAIf,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8BgB,QAA9B,EAAjB;AACA,UAAMC,QAAQ,GAAG,IAAIjB,IAAJ,GAAWC,OAAX,EAAjB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AA5BmC;;AA8BtC,eAAerB,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  render() {\n    const time_refresh = setInterval(function () {\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n\n      // Time calculations for days, hours, minutes and seconds\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      // Output the result in an element with id=\"demo\"\n      document.getElementById(\"demo\").innerHTML =\n        days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\n\n      // If the count down is over, write some text\n      if (distance < 0) {\n        clearInterval(x);\n        document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n      }\n    }, 1000);\n    const deadline = new Date(2017, 2, 11, 11, 30).toString();\n    const time_now = new Date().getTime();\n    console.log(deadline);\n    return <h1>Hello</h1>;\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}