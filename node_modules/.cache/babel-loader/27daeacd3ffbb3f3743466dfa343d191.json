{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = \"May 5 2020 15:00:00 GMT +0100\";\n      const t = Date.parse(countDownDate) - Date.parse(new Date());\n      var seconds = Math.floor(t / 1000 % 60);\n      var minutes = Math.floor(t / 1000 / 60 % 60);\n      var hours = Math.floor(t / (1000 * 60 * 60) % 24);\n      var days = Math.floor(t / (1000 * 60 * 60 * 24)); //  const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n\n      this.setState(({\n        days,\n        hours,\n        minutes,\n        seconds\n      }) => ({\n        days: 0,\n        hours: hour,\n        minutes: minute,\n        seconds: second\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \"Time Remaining \", days, \" :\", hours, \":\", minutes, \" :\", seconds);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","constructor","props","state","days","hours","minutes","seconds","componentDidMount","myInterval","setInterval","countDownDate","t","Date","parse","Math","floor","setState","hour","minute","second","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,YAAMC,aAAa,GAAG,+BAAtB;AACA,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAX,IAA4BE,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAAtC;AACA,UAAIN,OAAO,GAAGQ,IAAI,CAACC,KAAL,CAAaJ,CAAC,GAAC,IAAH,GAAW,EAAvB,CAAd;AACA,UAAIN,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAaJ,CAAC,GAAC,IAAF,GAAO,EAAR,GAAc,EAA1B,CAAd;AACA,UAAIP,KAAK,GAAGU,IAAI,CAACC,KAAL,CAAaJ,CAAC,IAAE,OAAK,EAAL,GAAQ,EAAV,CAAF,GAAmB,EAA/B,CAAZ;AACA,UAAIR,IAAI,GAAGW,IAAI,CAACC,KAAL,CAAYJ,CAAC,IAAE,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAb,CAAb,CAAX,CANkC,CAOlC;;AACA,WAAKK,QAAL,CAAc,CAAC;AAAEb,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,OAAf;AAAwBC,QAAAA;AAAxB,OAAD,MAAwC;AACpDH,QAAAA,IAAI,EAAE,CAD8C;AAEpDC,QAAAA,KAAK,EAAEa,IAF6C;AAGpDZ,QAAAA,OAAO,EAAEa,MAH2C;AAIpDZ,QAAAA,OAAO,EAAEa;AAJ2C,OAAxC,CAAd;AAMD,KAd4B,EAc1B,IAd0B,CAA7B;AAeD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoC,KAAKJ,KAA/C;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBC,IADlB,QAC0BC,KAD1B,OACkCC,OADlC,QAC6CC,OAD7C,CADF;AAKD;;AArCmC;;AAuCtC,eAAeR,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n  }\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = \"May 5 2020 15:00:00 GMT +0100\";\n      const t = Date.parse(countDownDate) - Date.parse(new Date());\n      var seconds = Math.floor( (t/1000) % 60 );\n      var minutes = Math.floor( (t/1000/60) % 60 );\n      var hours = Math.floor( (t/(1000*60*60)) % 24 );\n      var days = Math.floor( t/(1000*60*60*24) );\n      //  const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      this.setState(({ days, hours, minutes, seconds }) => ({\n        days: 0,\n        hours: hour,\n        minutes: minute,\n        seconds: second,\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const { days, hours, minutes, seconds } = this.state;\n    console.log(this.state);\n\n    return (\n      <h1>\n        Time Remaining {days} :{hours}:{minutes} :{seconds}\n      </h1>\n    );\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}