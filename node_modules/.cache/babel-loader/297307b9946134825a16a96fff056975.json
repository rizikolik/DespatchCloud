{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = new Date(\"May 5, 2020 15:00:00\").getTime();\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000);\n      const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      this.setState = {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      };\n      console.log(count);\n    }, 1000);\n  }\n\n  render() {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Busted!\"), \") : (\", /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Time Remaining: \", minutes, \":\", seconds), \")\");\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","constructor","props","state","days","hours","minutes","seconds","componentDidMount","myInterval","setInterval","countDownDate","Date","getTime","now","distance","Math","floor","count","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,YAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,sBAAT,EAAiCC,OAAjC,EAAtB;AACA,YAAMC,GAAG,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAME,QAAQ,GAAGJ,aAAa,GAAGG,GAAjC;AACA,YAAMV,IAAI,GAAGY,IAAI,CAACC,KAAL,CAAWF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAb;AACA,YAAMV,KAAK,GAAGW,IAAI,CAACC,KAAL,CACXF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CADY,CAAd;AAGA,YAAMT,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAhB;AACA,YAAMR,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB;AACA,YAAMG,KAAK,GAAI,MAAKd,IAAK,aAAYC,KAAM,cAAaC,OAAQ,YAAWC,OAAQ,SAAnF;AACA,WAAKY,QAAL,GAAgB;AACdf,QAAAA,IAAI,EAAEA,IADQ;AAEdC,QAAAA,KAAK,EAAEA,KAFO;AAGdC,QAAAA,OAAO,EAAEA,OAHK;AAIdC,QAAAA,OAAO,EAAEA;AAJK,OAAhB;AAMAa,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,KAlB4B,EAkB1B,IAlB0B,CAA7B;AAmBD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA8B,KAAKJ,KAAzC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBG,OADnB,OAC6BC,OAD7B,CAFF,MADF;AASD;;AA3CmC;;AA6CtC,eAAeR,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n  }\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = new Date(\"May 5, 2020 15:00:00\").getTime();\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      this.setState = {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds,\n      };\n      console.log(count);\n    }, 1000);\n  }\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n    return (\n      <div>\n        <h1>Busted!</h1>) : (\n        <h1>\n          Time Remaining: {minutes}:{seconds}\n        </h1>\n        )\n      </div>\n    );\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}