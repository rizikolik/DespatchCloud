{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  render() {\n    const countDownDate = new Date(\"Jan 5, 2021 15:37:25\").getTime();\n    setInterval(function () {\n      const now = new Date().getTime(); // Find the distance between now and the count down date\n\n      const distance = countDownDate - now; // Time calculations for days, hours, minutes and seconds\n\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000); // Display the result in the element with id=\"demo\"\n\n      const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      console.log(count);\n    }, 1000);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"moment\");\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","render","countDownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","count","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,sBAAT,EAAiCC,OAAjC,EAAtB;AACAC,IAAAA,WAAW,CAAC,YAAY;AACtB,YAAMC,GAAG,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAZ,CADsB,CAGtB;;AACA,YAAMG,QAAQ,GAAGL,aAAa,GAAGI,GAAjC,CAJsB,CAMtB;;AACA,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAb;AACA,YAAMI,KAAK,GAAGF,IAAI,CAACC,KAAL,CACXH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CADY,CAAd;AAGA,YAAMK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAhB;AACA,YAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAhB,CAZsB,CActB;;AACA,YAAMO,KAAK,GAAI,MAAKN,IAAK,aAAYG,KAAM,cAAaC,OAAQ,YAAWC,OAAQ,SAAnF;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjBU,EAiBR,IAjBQ,CAAX;AAmBA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAvBmC;;AAyBtC,eAAef,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  render() {\n    const countDownDate = new Date(\"Jan 5, 2021 15:37:25\").getTime();\n    setInterval(function () {\n      const now = new Date().getTime();\n\n      // Find the distance between now and the count down date\n      const distance = countDownDate - now;\n\n      // Time calculations for days, hours, minutes and seconds\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      // Display the result in the element with id=\"demo\"\n      const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      console.log(count);\n    }, 1000);\n\n    return <h1>moment</h1>;\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}