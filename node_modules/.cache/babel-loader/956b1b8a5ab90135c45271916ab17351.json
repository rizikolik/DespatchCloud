{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = new Date(\"May 5, 2020 15:00:00\").getTime();\n      const now = new Date().getTime();\n      const t = Date.parse(countDownDate) - Date.parse(now);\n      var seconds = Math.floor(t / 1000 % 60);\n      var minutes = Math.floor(t / 1000 / 60 % 60);\n      var hours = Math.floor(t / (1000 * 60 * 60) % 24); //  const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n\n      this.setState(({\n        days,\n        hours,\n        minutes,\n        seconds\n      }) => ({\n        days: day,\n        hours: hour,\n        minutes: minute,\n        seconds: second\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \"Time Remaining \", days, \" :\", hours, \":\", minutes, \" :\", seconds);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","constructor","props","state","days","hours","minutes","seconds","componentDidMount","myInterval","setInterval","countDownDate","Date","getTime","now","t","parse","Math","floor","setState","day","hour","minute","second","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,YAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,sBAAT,EAAiCC,OAAjC,EAAtB;AAEA,YAAMC,GAAG,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAME,CAAC,GAAGH,IAAI,CAACI,KAAL,CAAWL,aAAX,IAA4BC,IAAI,CAACI,KAAL,CAAWF,GAAX,CAAtC;AACA,UAAIP,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAYH,CAAC,GAAG,IAAL,GAAa,EAAxB,CAAd;AACA,UAAIT,OAAO,GAAGW,IAAI,CAACC,KAAL,CAAYH,CAAC,GAAG,IAAJ,GAAW,EAAZ,GAAkB,EAA7B,CAAd;AACA,UAAIV,KAAK,GAAGY,IAAI,CAACC,KAAL,CAAYH,CAAC,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAF,GAAyB,EAApC,CAAZ,CAPkC,CAQlC;;AACA,WAAKI,QAAL,CAAc,CAAC;AAAEf,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,OAAf;AAAwBC,QAAAA;AAAxB,OAAD,MAAwC;AACpDH,QAAAA,IAAI,EAAEgB,GAD8C;AAEpDf,QAAAA,KAAK,EAAEgB,IAF6C;AAGpDf,QAAAA,OAAO,EAAEgB,MAH2C;AAIpDf,QAAAA,OAAO,EAAEgB;AAJ2C,OAAxC,CAAd;AAMD,KAf4B,EAe1B,IAf0B,CAA7B;AAgBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoC,KAAKJ,KAA/C;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBC,IADlB,QAC0BC,KAD1B,OACkCC,OADlC,QAC6CC,OAD7C,CADF;AAKD;;AAtCmC;;AAwCtC,eAAeR,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n  }\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = new Date(\"May 5, 2020 15:00:00\").getTime();\n\n      const now = new Date().getTime();\n      const t = Date.parse(countDownDate) - Date.parse(now);\n      var seconds = Math.floor((t / 1000) % 60);\n      var minutes = Math.floor((t / 1000 / 60) % 60);\n      var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n      //  const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      this.setState(({ days, hours, minutes, seconds }) => ({\n        days: day,\n        hours: hour,\n        minutes: minute,\n        seconds: second,\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const { days, hours, minutes, seconds } = this.state;\n    console.log(this.state);\n\n    return (\n      <h1>\n        Time Remaining {days} :{hours}:{minutes} :{seconds}\n      </h1>\n    );\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}