{"ast":null,"code":"var _jsxFileName = \"/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = \"May 5 2020 15:00:00 GMT +0100\";\n      const t = Date.parse(countDownDate) - Date.parse(new Date());\n      var second = Math.floor(t / 1000 % 60);\n      var minute = Math.floor(t / 1000 / 60 % 60);\n      var hour = Math.floor(t / (1000 * 60 * 60)); //  const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n\n      this.setState(({\n        hours,\n        minutes,\n        seconds\n      }) => ({\n        hours: hour,\n        minutes: minute,\n        seconds: second\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"gifts in time for christmas\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"guaranteed delivery ends in :\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Time Remaining \", hours, \" :\", minutes, \" :\", seconds));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/ynsture/Developments/despatch_cloud_test/src/components/Header/counter.js"],"names":["React","Counter","Component","constructor","props","state","hours","minutes","seconds","componentDidMount","myInterval","setInterval","countDownDate","t","Date","parse","second","Math","floor","minute","hour","setState","render","days","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,YAAMC,aAAa,GAAG,+BAAtB;AACA,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAX,IAA4BE,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAAtC;AACA,UAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAYL,CAAC,GAAG,IAAL,GAAa,EAAxB,CAAb;AACA,UAAIM,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAYL,CAAC,GAAG,IAAJ,GAAW,EAAZ,GAAkB,EAA7B,CAAb;AACA,UAAIO,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAWL,CAAC,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAZ,CAAX,CALkC,CAOlC;;AACA,WAAKQ,QAAL,CAAc,CAAC;AAAEf,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,OAAD,MAAkC;AAC9CF,QAAAA,KAAK,EAAEc,IADuC;AAE9Cb,QAAAA,OAAO,EAAEY,MAFqC;AAG9CX,QAAAA,OAAO,EAAEQ;AAHqC,OAAlC,CAAd;AAKD,KAb4B,EAa1B,IAb0B,CAA7B;AAcD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQjB,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoC,KAAKH,KAA/C;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBC,KADlB,QAC2BC,OAD3B,QACsCC,OADtC,CAHF,CADF;AASD;;AAvCmC;;AAyCtC,eAAeP,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n  }\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const countDownDate = \"May 5 2020 15:00:00 GMT +0100\";\n      const t = Date.parse(countDownDate) - Date.parse(new Date());\n      var second = Math.floor((t / 1000) % 60);\n      var minute = Math.floor((t / 1000 / 60) % 60);\n      var hour = Math.floor(t / (1000 * 60 * 60));\n\n      //  const count = `   ${days} + \"d \" + ${hours} + \"h \"  + ${minutes}+ \"m \" + ${seconds} + \"s \"`;\n      this.setState(({ hours, minutes, seconds }) => ({\n        hours: hour,\n        minutes: minute,\n        seconds: second,\n      }));\n    }, 1000);\n  }\n\n  render() {\n    const { days, hours, minutes, seconds } = this.state;\n    console.log(this.state);\n\n    return (\n      <React.Fragment>\n        <h1>gifts in time for christmas</h1>\n        <p>guaranteed delivery ends in :</p>\n        <h1>\n          Time Remaining {hours} :{minutes} :{seconds}\n        </h1>\n      </React.Fragment>\n    );\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}